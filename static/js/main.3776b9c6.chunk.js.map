{"version":3,"sources":["componentes/ItemCount.jsx","componentes/CartContext.jsx","componentes/ItemDetail.jsx","componentes/ItemDetailCOntainer.jsx","componentes/Item.jsx","componentes/ItemList.jsx","componentes/ItemListContainer.jsx","componentes/CartWidget.jsx","componentes/NavBar.jsx","componentes/Cart.jsx","App.js","serviceWorker.js","index.js"],"names":["ItemCount","initial","stock","onAdd","useState","qty","setqty","Button","className","disabled","onClick","CartContext","createContext","CartProvider","children","producto","setProducto","console","log","Provider","value","addItem","item","id","newProduct","find","found","productIndex","indexOf","auxArray","removeItem","filter","i","clearItems","totalPrice","reduce","prev","act","price","getItemQuantity","acumulator","ItemDetail","cantidad","setCantidad","image","title","description","useContext","Card","Img","variant","src","Body","Title","Text","to","quantity","ItemDetailCOntainer","useParams","useEffect","querydb","getFirestore","queryDoc","doc","getDoc","then","res","data","Item","ItemList","map","key","ItemListContainer","queryCollection","collection","queryFilter","query","where","getDocs","docs","CartWidget","name","NavBar","Nav","Navbar","Brand","Cart","setName","email","setEmail","phone","setPhone","sentOrder","setSentOrder","orderId","setOrderId","db","orderCollection","length","Table","striped","bordered","hover","size","color","type","onChange","e","target","placeholder","order","buyer","items","total","fecha","Date","addDoc","catch","error","App","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","path","element","Boolean","window","location","hostname","match","rootElement","document","getElementById","ReactDOMClient","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3776b9c6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function ItemCount({ initial, stock, onAdd }) {\r\n  const [qty, setqty] = useState(initial);\r\n\r\n  const decrease = () => {\r\n    setqty(qty - 1);\r\n  };\r\n  const increase = () => {\r\n    setqty(qty + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button\r\n          className=\"btn btn-danger btn-sm\"\r\n          disabled={qty <= 1}\r\n          onClick={decrease}\r\n        >\r\n          -\r\n        </Button>\r\n        <span>{qty}</span>\r\n        <Button\r\n          className=\"btn btn-info btn-sm\"\r\n          disabled={qty >= stock}\r\n          onClick={increase}\r\n        >\r\n          +\r\n        </Button>\r\n        <br />\r\n        <Button disabled={stock <= 0} onClick={() => onAdd(qty)}>\r\n          agregar al carrito\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\nexport const CartContext = createContext([]);\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [producto, setProducto] = useState([]);\r\n\r\n  console.log(producto);\r\n\r\n  const isInCart = (id) => {\r\n    const found = producto.find((producto) => producto.id === id);\r\n    return found;\r\n  };\r\n\r\n  const addItem = (item, qty) => {\r\n    const newProduct = {\r\n      ...item,\r\n      qty,\r\n    };\r\n    if (isInCart(item.id)) {\r\n      const found = producto.find((producto) => producto.id === item.id);\r\n      const productIndex = producto.indexOf(found);\r\n      const auxArray = [...producto];\r\n      auxArray[productIndex].qty += qty;\r\n      setProducto(auxArray);\r\n    } else {\r\n      setProducto([...producto, newProduct]);\r\n    }\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    setProducto(producto.filter((i) => i.id !== id));\r\n  };\r\n  const clearItems = () => {\r\n    setProducto([]);\r\n  };\r\n  const totalPrice = () => {\r\n    return producto.reduce((prev, act) => prev + act.qty * act.price, 0);\r\n  };\r\n  const getItemQuantity = () => {\r\n    return producto.reduce((acumulator, item) => (acumulator += item.qty), 0);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        producto,\r\n        addItem,\r\n        removeItem,\r\n        clearItems,\r\n        totalPrice,\r\n        getItemQuantity,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport ItemCount from \"./ItemCount\";\r\nimport { useContext } from \"react\";\r\nimport { CartContext } from \"./CartContext\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ItemDetail({ producto }) {\r\n  const [cantidad, setCantidad] = useState(0);\r\n  const { image, title, description, price, stock } = producto;\r\n  const { addItem } = useContext(CartContext);\r\n\r\n  function onAdd(quantity) {\r\n    addItem(producto, quantity);\r\n    setCantidad(quantity);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"Card\">\r\n        <Card.Img className=\"cardImg\" variant=\"top\" src={image} />\r\n        <Card.Body>\r\n          <Card.Title>{title}</Card.Title>\r\n          <Card.Text>{description}</Card.Text>\r\n          <Card.Text className=\"text\">$ {price}</Card.Text>\r\n          <p className=\"card-text text-secondary\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas,\r\n          </p>\r\n\r\n          {cantidad > 0 ? (\r\n            <Link className=\"btn btn-danger\" to={\"/cart\"}>\r\n              Terminar mi compra\r\n            </Link>\r\n          ) : (\r\n            <ItemCount initial={1} stock={stock} onAdd={onAdd} />\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ItemDetail from \"./ItemDetail\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getFirestore, doc, getDoc } from \"firebase/firestore\";\r\n\r\nfunction ItemDetailCOntainer() {\r\n  const [producto, setProducto] = useState({});\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const querydb = getFirestore();\r\n    const queryDoc = doc(querydb, \"items\", id);\r\n    getDoc(queryDoc).then((res) => setProducto({ id: res.id, ...res.data() }));\r\n  }, [id]);\r\n\r\n  return <ItemDetail producto={producto} />;\r\n}\r\n\r\nexport default ItemDetailCOntainer;\r\n","import React from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Item = ({ producto }) => {\r\n  const { image, title, description, price } = producto;\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"Card\">\r\n        <Card.Img className=\"cardImg\" variant=\"top\" src={image} />\r\n        <Card.Body>\r\n          <Card.Title>{title}</Card.Title>\r\n          <Card.Text>{description}</Card.Text>\r\n          <Card.Text className=\"text\">$ {price}</Card.Text>\r\n          <div className=\"button\">\r\n            <NavLink to={`/item/${producto.id}`}>\r\n              <Button className=\"btn btn-dark\" variant=\"primary\">\r\n                detalles del producto\r\n              </Button>\r\n            </NavLink>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport Item from \"./Item\";\r\n\r\nconst ItemList = ({ producto }) => {\r\n  return (\r\n    <>\r\n      <div className=\"map\">\r\n        {producto?.map((producto) => (\r\n          <Item key={producto.id} producto={producto} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ItemList from \"./ItemList\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\n\r\nfunction ItemListContainer() {\r\n  const { id } = useParams();\r\n  const [producto, setProducto] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const querydb = getFirestore();\r\n    const queryCollection = collection(querydb, \"items\");\r\n\r\n    if (id) {\r\n      const queryFilter = query(queryCollection, where(\"category\", \"==\", id));\r\n      getDocs(queryFilter).then((res) =>\r\n        setProducto(res.docs.map((item) => ({ id: item.id, ...item.data() })))\r\n      );\r\n    } else {\r\n      getDocs(queryCollection).then((res) =>\r\n        setProducto(res.docs.map((item) => ({ id: item.id, ...item.data() })))\r\n      );\r\n    }\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <ItemList producto={producto} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default ItemListContainer;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { CartContext } from \"./CartContext\";\r\n\r\nconst CartWidget = () => {\r\n  const { getItemQuantity } = useContext(CartContext);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {getItemQuantity()}\r\n        <ion-icon name=\"cart-outline\"></ion-icon>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartWidget;\r\n","import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport CartWidget from \"./CartWidget\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <Nav className=\"navbar navbar-dark bg-warning\">\r\n          <div className=\"container\">\r\n            <Navbar.Brand to=\"/\">BOUTIQUE AK</Navbar.Brand>\r\n\r\n            <Link to=\"/\" className=\"btn btn-outline-primary\">\r\n              inicio\r\n            </Link>\r\n            <Link to=\"/category/articulos\" className=\"btn btn-outline-primary\">\r\n              articulos\r\n            </Link>\r\n            <Link to=\"/category/bolsos\" className=\"btn btn-outline-primary\">\r\n              bolsos\r\n            </Link>\r\n            <Link to=\"/category/lociones\" className=\"btn btn-outline-primary\">\r\n              lociones\r\n            </Link>\r\n            <Link to=\"/cart\">\r\n              <CartWidget />\r\n            </Link>\r\n          </div>\r\n        </Nav>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { CartContext } from \"./CartContext\";\r\nimport { Button, Card, Table } from \"react-bootstrap\";\r\nimport { addDoc, collection, getFirestore } from \"firebase/firestore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nconst Cart = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [sentOrder, setSentOrder] = useState(false);\r\n  const [orderId, setOrderId] = useState(\"\");\r\n\r\n  const db = getFirestore();\r\n  const orderCollection = collection(db, \"pedidos\");\r\n\r\n  const { producto, removeItem, clearItems, totalPrice } =\r\n    useContext(CartContext);\r\n\r\n  function handleClick() {\r\n    const order = {\r\n      buyer: { name, email, phone },\r\n      items: producto,\r\n      total: totalPrice(),\r\n      fecha: new Date(),\r\n    };\r\n    console.log(order);\r\n    addDoc(orderCollection, order)\r\n      .then(({ id }) => {\r\n        setOrderId(id);\r\n        setSentOrder(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  if (producto.length === 0) {\r\n    return (\r\n      <div className=\"checkoutBody\">\r\n        <h1>Tu carro está vacío</h1>\r\n        <Link to=\"/\">\r\n          <Button>INICIAR COMPRA</Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"map\">\r\n        {producto.map((item) => (\r\n          <div key={item.id}>\r\n            <Card className=\"Card\">\r\n              <Card.Img className=\"cardImg\" variant=\"top\" src={item.image} />\r\n\r\n              <Card.Body>\r\n                <Card.Title>{item.title}</Card.Title>\r\n                <Card.Text>{item.description}</Card.Text>\r\n                <Card.Text className=\"text\"> VALOR $ {item.price}</Card.Text>\r\n                <p className=\"btn btn-dark\" variant=\"primary\">\r\n                  {\" \"}\r\n                  Cantidad: {item.qty}\r\n                </p>\r\n                <p className=\"btn btn-dark\" variant=\"primary\">\r\n                  {\" \"}\r\n                  Subtotal:$ {item.qty * item.price}\r\n                </p>\r\n\r\n                <Button\r\n                  className=\"btn btn-dark\"\r\n                  variant=\"primary\"\r\n                  onClick={() => removeItem(item.id)}\r\n                >\r\n                  borrar producto\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n        <br></br>\r\n\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <font color=\"white\">VALOR TOTAL DE LA COMPRA</font>{\" \"}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <font color=\"white\"> $ {totalPrice()}</font>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n\r\n      <div className=\"checkoutBody\">\r\n        <h1>\r\n          <font color=\"white\">¡GRACIAS POR COMPRAR EN BOUTIQUE AK!</font>\r\n        </h1>\r\n        <p>\r\n          <font color=\"white\">\r\n            Llena los campos completar compra. la compra\r\n          </font>\r\n        </p>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"Tu nombre...\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Tu email...\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n          placeholder=\"Tu teléfono...\"\r\n        />\r\n        <Button onClick={handleClick}>EMITIR COMPRA</Button>\r\n        <Button\r\n          className=\"btn btn-red\"\r\n          variant=\"primary\"\r\n          onClick={() => clearItems()}\r\n        >\r\n          VACIAR CARRITO\r\n        </Button>\r\n      </div>\r\n      {sentOrder && (\r\n        <div className=\"sentOrder\">\r\n          <h2>\r\n            <font color=\"white\">NUMERO DE PEDIDO:</font>\r\n          </h2>\r\n          <p className=\"orderId\">\r\n            <font color=\"white\">{orderId}</font>\r\n          </p>\r\n          <p>\r\n            <font color=\"white\">\r\n              Nos pondremos en contacto para gestionar el pago y el envío!\r\n            </font>\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport './App.css';\r\nimport ItemDetailCOntainer from './componentes/ItemDetailCOntainer';\r\nimport ItemListContainer from './componentes/ItemListContainer';\r\nimport NavBar from './componentes/NavBar';\r\nimport Cart from './componentes/Cart';\r\nimport { CartProvider } from './componentes/CartContext';\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\nfunction App() {\r\n  initializeApp({\r\n    apiKey: \"AIzaSyD_AiMgWuYpchDHeMiPa3o_WGNsXsksdxs\",\r\n    authDomain: \"coderhouse-ef71d.firebaseapp.com\",\r\n    databaseURL: \"https://coderhouse-ef71d-default-rtdb.firebaseio.com\",\r\n    projectId: \"coderhouse-ef71d\",\r\n    storageBucket: \"coderhouse-ef71d.appspot.com\",\r\n    messagingSenderId: \"535441858158\",\r\n    appId: \"1:535441858158:web:305b09901427444a75107f\",\r\n    measurementId: \"G-W8RK943LC9\"\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className='App'  >\r\n        <CartProvider>\r\n          <BrowserRouter >\r\n            <NavBar />\r\n            <Routes>\r\n              <Route path='/' element={<ItemListContainer />} ></Route>\r\n              <Route path='/category/:id' element={<ItemListContainer />} ></Route>\r\n              <Route path='/item/:id' element={<ItemDetailCOntainer />}>  </Route>\r\n              <Route path='/cart' element={<Cart />}>  </Route>\r\n            </Routes>\r\n          </BrowserRouter>\r\n        </CartProvider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nconst rootElement=document.getElementById('root');\nconst root= ReactDOMClient.createRoot(rootElement);\nroot.render(\n<React.StrictMode>\n    <App />\n    </React.StrictMode>,\n    \n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n"],"sourceRoot":""}